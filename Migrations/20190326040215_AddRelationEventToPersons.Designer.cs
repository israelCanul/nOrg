// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace narilearsi.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20190326040215_AddRelationEventToPersons")]
    partial class AddRelationEventToPersons
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("narilearsi.ModelDB.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EventoEventTypeIdEventTypeId");

                    b.Property<int?>("PersonsPersonID");

                    b.Property<DateTime>("eventDate");

                    b.Property<string>("eventDescription");

                    b.Property<string>("eventName");

                    b.Property<string>("eventStatus");

                    b.HasKey("EventId");

                    b.HasIndex("EventoEventTypeIdEventTypeId");

                    b.HasIndex("PersonsPersonID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("narilearsi.ModelDB.EventType", b =>
                {
                    b.Property<int>("EventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("etDescription");

                    b.Property<string>("etName");

                    b.HasKey("EventTypeId");

                    b.ToTable("EventType");
                });

            modelBuilder.Entity("narilearsi.ModelDB.Item", b =>
                {
                    b.Property<int>("itemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description");

                    b.Property<int?>("itemPackageId");

                    b.Property<string>("source");

                    b.HasKey("itemId");

                    b.HasIndex("itemPackageId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("narilearsi.ModelDB.ItemPackage", b =>
                {
                    b.Property<int>("itemPackageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("itemDescription");

                    b.Property<string>("itemName");

                    b.Property<string>("itemNotes");

                    b.Property<string>("itemSize");

                    b.Property<int>("itemTypeId");

                    b.Property<int>("packageId");

                    b.Property<int?>("photoPackageId");

                    b.HasKey("itemPackageId");

                    b.HasIndex("photoPackageId");

                    b.ToTable("ItemPackage");
                });

            modelBuilder.Entity("narilearsi.ModelDB.Persons", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("PersonID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("narilearsi.ModelDB.PhotoPackage", b =>
                {
                    b.Property<int>("photoPackageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventId");

                    b.Property<string>("ppDescription");

                    b.Property<string>("ppName");

                    b.HasKey("photoPackageId");

                    b.HasIndex("EventId");

                    b.ToTable("PhotoPackage");
                });

            modelBuilder.Entity("narilearsi.ModelDB.Event", b =>
                {
                    b.HasOne("narilearsi.ModelDB.EventType", "EventoEventTypeId")
                        .WithMany()
                        .HasForeignKey("EventoEventTypeIdEventTypeId");

                    b.HasOne("narilearsi.ModelDB.Persons")
                        .WithMany("Event")
                        .HasForeignKey("PersonsPersonID");
                });

            modelBuilder.Entity("narilearsi.ModelDB.Item", b =>
                {
                    b.HasOne("narilearsi.ModelDB.ItemPackage")
                        .WithMany("Items")
                        .HasForeignKey("itemPackageId");
                });

            modelBuilder.Entity("narilearsi.ModelDB.ItemPackage", b =>
                {
                    b.HasOne("narilearsi.ModelDB.PhotoPackage")
                        .WithMany("itemPackage")
                        .HasForeignKey("photoPackageId");
                });

            modelBuilder.Entity("narilearsi.ModelDB.PhotoPackage", b =>
                {
                    b.HasOne("narilearsi.ModelDB.Event")
                        .WithMany("photoPackage")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
